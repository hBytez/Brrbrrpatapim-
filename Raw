-- Services
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local LogService = game:GetService("LogService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")
local HttpService = game:GetService("HttpService")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer and LocalPlayer:WaitForChild("PlayerGui")

-- Settings for remote blocking
local BLOCK_REMOTE_EVENTS = true
local BLOCK_REMOTE_FUNCTIONS = false
local ALLOW_HITBOX = true

-- Dedicated error handler
local function errorHandler(err)
    warn("[KAROXNotice Error Handler]: " .. tostring(err))
    -- Return true to suppress error propagation
    return true
end

local function safeSpawn(fn)
    spawn(function()
        local success, err = xpcall(fn, errorHandler)
        if not success then
            -- Error already handled in errorHandler
        end
    end)
end

-- Error/log/message bypass hooks
LogService.MessageOut:Connect(function(message, messageType)
    if messageType == Enum.MessageType.MessageError
    or messageType == Enum.MessageType.MessageWarning
    or messageType == Enum.MessageType.MessageInfo then
        -- Suppress or log in custom way
        -- Uncomment to suppress logs: return
        warn("[LogService Bypass]: ".. message)
    end
end)

-- Suppress print, warn, error globally
local oldPrint, oldWarn, oldError = print, warn, error
print = function(...) end
warn = function(...) end
error = function(...) end

-- Suppress ScriptContext errors globally
if RunService:IsClient() then
    -- No direct event to hook, but keep this placeholder
end

-- UI Notification Setup (KAROX Notice)
if PlayerGui:FindFirstChild("KAROXNotice") then
    PlayerGui.KAROXNotice:Destroy()
end

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "KAROXNotice"
screenGui.ResetOnSpawn = false
screenGui.Parent = PlayerGui

local frame = Instance.new("Frame")
frame.Name = "NotificationFrame"
frame.Size = UDim2.new(0, 340, 0, 80)
frame.AnchorPoint = Vector2.new(0.5, 0)
frame.Position = UDim2.new(0.5, 0, 0, 20)
frame.BackgroundColor3 = Color3.fromRGB(37, 37, 37)
frame.BorderSizePixel = 0
frame.BackgroundTransparency = 0.05
frame.Parent = screenGui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 12)
corner.Parent = frame

local outerStroke = Instance.new("UIStroke")
outerStroke.Thickness = 1
outerStroke.Color = Color3.new(1, 0, 0)
outerStroke.Parent = frame

local icon = Instance.new("ImageLabel")
icon.Size = UDim2.new(0, 24, 0, 24)
icon.Position = UDim2.new(0, 12, 0, 4)
icon.BackgroundTransparency = 1
icon.Image = "rbxassetid://13686901765"
icon.Parent = frame

local iconStroke = Instance.new("UIStroke")
iconStroke.Thickness = 1
iconStroke.Color = Color3.new(1, 0, 0)
iconStroke.Parent = icon

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -54, 0, 20)
title.Position = UDim2.new(0, 44, 0, 12)
title.BackgroundTransparency = 1
title.Font = Enum.Font.GothamBold
title.Text = "KAROX:"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextXAlignment = Enum.TextXAlignment.Left
title.TextSize = 19
title.Parent = frame

local titleStroke = Instance.new("UIStroke")
titleStroke.Thickness = 1
titleStroke.Color = Color3.new(1, 0, 0)
titleStroke.Parent = title

local desc = Instance.new("TextLabel")
desc.Size = UDim2.new(1, -28, 1, -40)
desc.Position = UDim2.new(0, 14, 0, 34)
desc.BackgroundTransparency = 1
desc.Font = Enum.Font.Gotham
desc.Text = "[KAROX COMBINED ANTI-CHEAT REMOVER IS ACTIVATED. PLEASE WAIT]"
desc.TextColor3 = Color3.fromRGB(230, 230, 230)
desc.TextXAlignment = Enum.TextXAlignment.Left
desc.TextYAlignment = Enum.TextYAlignment.Top
desc.TextSize = 15
desc.TextWrapped = true
desc.Parent = frame

local descStroke = Instance.new("UIStroke")
descStroke.Thickness = 1
descStroke.Color = Color3.new(1, 0, 0)
descStroke.Parent = desc

local function createExtraRGBOutline(textLabel)
    local extraOutline = Instance.new("UIStroke")
    extraOutline.Thickness = 2
    extraOutline.Color = Color3.new(1, 0, 0)
    extraOutline.Parent = textLabel
    return extraOutline
end

local extraTitleStroke = createExtraRGBOutline(title)
local extraDescStroke = createExtraRGBOutline(desc)

local stroke = Instance.new("UIStroke")
stroke.Thickness = 2
stroke.Color = Color3.fromRGB(128, 128, 128)
stroke.Parent = frame

game:GetService("Debris"):AddItem(screenGui, 8)

-- Draggable logic with camera lock
local dragToggle, dragInput, dragStart, startPos
local Camera = workspace.CurrentCamera
local cameraLocked = false
local originalCameraType = Camera.CameraType

local function lockCamera()
    if not cameraLocked then
        originalCameraType = Camera.CameraType
        Camera.CameraType = Enum.CameraType.Scriptable
        cameraLocked = true
    end
end

local function unlockCamera()
    if cameraLocked then
        Camera.CameraType = originalCameraType
        cameraLocked = false
    end
end

local function update(input)
    local delta = input.Position - dragStart
    local newPos = UDim2.new(
        math.clamp(startPos.X.Scale, 0, 1),
        math.clamp(startPos.X.Offset + delta.X, 0, Camera.ViewportSize.X - frame.AbsoluteSize.X),
        math.clamp(startPos.Y.Scale, 0, 1),
        math.clamp(startPos.Y.Offset + delta.Y, 0, Camera.ViewportSize.Y - frame.AbsoluteSize.Y)
    )
    frame.Position = newPos
end

frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragToggle = true
        dragStart = input.Position
        startPos = frame.Position
        lockCamera()

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragToggle = false
                unlockCamera()
            end
        end)
    end
end)

frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragToggle then
        update(input)
    end
end)

-- RGB cycling loop
local cycling = true
safeSpawn(function()
    local t = 0
    while cycling do
        t = t + 0.03
        local r = (math.sin(t) + 1) / 2
        local g = (math.sin(t + 2) + 1) / 2
        local b = (math.sin(t + 4) + 1) / 2
        local color = Color3.new(r, g, b)

        outerStroke.Color = color
        iconStroke.Color = color
        titleStroke.Color = color
        descStroke.Color = color
        extraTitleStroke.Color = color
        extraDescStroke.Color = color

        wait(0.03)
    end
end)

-- Fade out after 4 seconds visible, 5 second fade
delay(4, function()
    cycling = false

    local tweenInfo = TweenInfo.new(5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local bgColor = Color3.fromRGB(37, 37, 37)

    local fadeTween = TweenService:Create(frame, tweenInfo, {BackgroundTransparency = 1})
    fadeTween:Play()

    local function fadeUI(guiObj)
        local tw = TweenService:Create(guiObj, tweenInfo, {TextTransparency = 1, TextStrokeTransparency = 1, BackgroundTransparency = 1})
        tw:Play()
        return tw
    end

    fadeUI(title)
    fadeUI(desc)

    local iconTween = TweenService:Create(icon, tweenInfo, {ImageTransparency = 1})
    iconTween:Play()

    local function fadeStrokeColor(stroke)
        local tw = TweenService:Create(stroke, tweenInfo, {Color = bgColor})
        tw:Play()
        return tw
    end

    fadeStrokeColor(outerStroke)
    fadeStrokeColor(iconStroke)
    fadeStrokeColor(titleStroke)
    fadeStrokeColor(descStroke)
    fadeStrokeColor(extraTitleStroke)
    fadeStrokeColor(extraDescStroke)

    fadeTween.Completed:Wait()
    screenGui:Destroy()
end)

-- Main anti-cheat hooking and bypass logic
local getinfo = getinfo or debug.getinfo
local DEBUG = false
local Hooked = {}
local Detected, Kill

-- Set thread identity for secure environment
setthreadidentity(2)

safeSpawn(function()
    for i, v in getgc(true) do
        if typeof(v) == "table" then
            local DetectFunc = rawget(v, "Detected")
            local KillFunc = rawget(v, "Kill")
            if typeof(DetectFunc) == "function" and not Detected then
                Detected = DetectFunc
                local Old; Old = hookfunction(Detected, function(Action, Info, NoCrash)
                    pcall(function()
                        if Action ~= "_" and DEBUG then
                            warn("Adonis AntiCheat flagged\nMethod: "..tostring(Action).."\nInfo: "..tostring(Info))
                        end
                    end)
                    return true
                end)
                table.insert(Hooked, Detected)
            end
            if rawget(v, "Variables") and rawget(v, "Process") and typeof(KillFunc) == "function" and not Kill then
                Kill = KillFunc
                local Old; Old = hookfunction(Kill, function(Info)
                    pcall(function()
                        if DEBUG then
                            warn("Adonis AntiCheat tried to kill (fallback): ".. tostring(Info))
                        end
                    end)
                end)
                table.insert(Hooked, Kill)
            end
        end
    end
end)

local OldInfo; OldInfo = hookfunction(getrenv().debug.info, newcclosure(function(...)
    local LevelOrFunc, Info = ...
    if Detected and LevelOrFunc == Detected then
        if DEBUG then warn("zins | adonis bypassed") end
        return coroutine.yield(coroutine.running())
    end
    return OldInfo(...)
end))

setthreadidentity(7)

-- Ensure game is loaded
if not game:IsLoaded() then
    game.Loaded:Wait()
end

-- Blocking RemoteEvents and RemoteFunctions as per settings
safeSpawn(function()
    while wait(1) do
        pcall(function()
            local Remotes = game.ReplicatedStorage:FindFirstChild("Remotes")
            if Remotes and Remotes:FindFirstChild("Events") and Remotes.Events:FindFirstChild("GameManager") then
                Remotes.Events.GameManager:Destroy()
            end

            if BLOCK_REMOTE_EVENTS or BLOCK_REMOTE_FUNCTIONS then
                for _, remote in pairs(Remotes:GetDescendants()) do
                    if remote:IsA("RemoteEvent") and BLOCK_REMOTE_EVENTS then
                        remote:Destroy()
                    elseif remote:IsA("RemoteFunction") and BLOCK_REMOTE_FUNCTIONS then
                        remote:Destroy()
                    end
                end
            end
        end)
    end
end)

-- Disable Points GUI or similar
safeSpawn(function()
    local player = LocalPlayer
    while wait() do
        pcall(function()
            local points = player.PlayerGui:FindFirstChild("Points")
            if points then
                points.Disabled = true
                if points:FindFirstChild("PointsCreator") then
                    points.PointsCreator.Disabled = true
                end
                points:Destroy()
            end
            local starterGui = game:GetService("StarterGui")
            if starterGui:FindFirstChild("Points") then
                starterGui.Points.Disabled = true
                starterGui.Points:Destroy()
            end
            if starterGui:FindFirstChild("PointsCreator") then
                starterGui.PointsCreator.Disabled = true
            end
        end)
    end
end)

-- Load Anti-Kick Script and other bypasses
pcall(function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Exunys/Anti-Kick/main/Anti-Kick.lua"))()
end)

pcall(function()
    loadstring(game:HttpGet("https://pastebin.com/raw/MZrwt5Rm", true))()
end)

-- WalkSpeed Bypass Example (override Humanoid.WalkSpeed setter)
safeSpawn(function()
    local function bypassWalkSpeed()
        local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            local mt = getrawmetatable(game)
            local oldIndex = mt.__index
            local oldNewIndex = mt.__newindex
            setreadonly(mt, false)
            mt.__newindex = newcclosure(function(t, k, v)
                if k == "WalkSpeed" and t == humanoid then
                    -- Bypass set request here, or modify v to a safe value
                    return
                end
                return oldNewIndex(t, k, v)
            end)
            mt.__index = oldIndex
            setreadonly(mt, true)
        end
    end
    while wait(5) do
        bypassWalkSpeed()
    end
end)

-- Instant Fly Detection Bypass (hook common fly detection functions)
-- Placeholder as fly detection methods vary
safeSpawn(function()
    -- Add specific fly detection hook code here if known
end)

-- CoreGui Detection Bypass (example: hiding exploit GUIs from core Gui detection)
safeSpawn(function()
    for _, gui in pairs(CoreGui:GetChildren()) do
        if gui.Name == "RobloxGui" or gui.Name == "SomeAntiCheatCoreGui" then
            gui:GetPropertyChangedSignal("Enabled"):Connect(function()
                if gui.Enabled == false then
                    gui.Enabled = true -- Force enable or block detection
                end
            end)
        end
    end
end)

-- MemoryCheck Bypass (general approach)
safeSpawn(function()
    -- For example override memory introspection functions or hook getmemoryinfo
    if getmemoryusage then
        local oldMemoryUsage = getmemoryusage
        _G.getmemoryusage = function() return oldMemoryUsage() + 100 end -- Salvage havoc for memory check
    end
end)

-- BTools Detection Bypass
safeSpawn(function()
    -- Hide or disable BTools if detected
    local backpack = LocalPlayer:WaitForChild("Backpack")
    for _, tool in pairs(backpack:GetChildren()) do
        if tool.Name:match("BTools") then
            tool:Destroy()
        end
    end
end)

-- gcinfo bypass (hook garbage collector info calls)
safeSpawn(function()
    local oldGCInfo = gcinfo or collectgarbage
    gcinfo = function() return math.random(10000, 20000) end
end)

-- Humanoid Detection Bypass (example to block detection of Humanoid changes)
safeSpawn(function()
    local mt = getrawmetatable(game)
    local oldIndex = mt.__index
    setreadonly(mt, false)
    mt.__index = newcclosure(function(t, k)
        if k == "Humanoid" then
            return nil -- Hide Humanoid reference if accessed
        end
        return oldIndex(t, k)
    end)
    setreadonly(mt, true)
end)

-- FindInstance & InstanceIsA Bypass (hook common instance lookup methods)
safeSpawn(function()
    local mt = getrawmetatable(game)
    local oldNameCall = mt.__namecall
    local oldIndex = mt.__index
    setreadonly(mt, false)
    mt.__namecall = newcclosure(function(self, ...)
        local method = getnamecallmethod()
        local args = {...}
        if method == "FindFirstChild" then
            -- Block or alter instance finding for banned detection
            if args[1]:lower():find("anticheat") then
                return nil
            end
        elseif method == "IsA" then
            -- Alter IsA checks to return false for banned classes
            if tostring(self) == "Humanoid" and args[1]:lower():find("humanoid") then
                return false
            end
        end
        return oldNameCall(self, ...)
    end)
    mt.__index = function(t, k)
        if tostring(k) == "FindFirstChild" then
            return function(self, childName)
                if childName:lower():find("anticheat") then
                    return nil
                end
                return t.FindFirstChild(self, childName)
            end
        end
        return oldIndex(t, k)
    end
    setreadonly(mt, true)
end)

return true
